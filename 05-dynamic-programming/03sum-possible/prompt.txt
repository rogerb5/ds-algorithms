Write a function sum_possible that takes in an amount and a list of positive numbers. The function should return a boolean indicating whether or not it is possible to create the amount by summing numbers of the list. You may reuse numbers of the list as many times as necessary.

You may assume that the target amount is non-negative.

Test 00:
sum_possible(8, [5, 12, 4]) # -> True, 4 + 4

Test 01:
sum_possible(15, [6, 2, 10, 19]) # -> False

Test 02:
sum_possible(13, [6, 2, 1]) # -> True

Test 03:
sum_possible(103, [6, 20, 1]) # -> True

Test 04:
sum_possible(12, []) # -> False

Test 05:
sum_possible(12, [12]) # -> True

Test_06:
sum_possible(0, []) # -> True

Test_07:
sum_possible(271, [10, 8, 265, 24]) # -> False

Test_08:
sum_possible(2017, [4, 2, 10]) # -> False

Test_09:
sum_possible(13, [3, 5]) # -> true

